name: .Net Core Deploy to IIS

on:
  push:
    branches:
      - Development
  workflow_dispatch:   # Manual trigger option

jobs:
  build-and-deploy:
    runs-on: self-hosted   # your IIS server runner

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET 9
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: dotnet restore devopswebapp/devopswebapp.csproj

    - name: Build
      run: dotnet build devopswebapp/devopswebapp.csproj --configuration Release --no-restore

    - name: Publish
      run: dotnet publish devopswebapp/devopswebapp.csproj -c Release -o ./publish

    - name: Deploy to IIS
      run: |
        Import-Module WebAdministration

        $sitePath = "C:\inetpub\wwwroot\MyNewWebsite"
        $appPool = "DefaultAppPool"

        # Create app_offline.htm to unload the app gracefully
        Write-Output "Adding app_offline.htm..."
        New-Item -Path "$sitePath\app_offline.htm" -ItemType File -Force

        # Stop the app pool
        Write-Output "Stopping IIS App Pool..."
        Stop-WebAppPool -Name $appPool

        # Clean existing files safely
        Write-Output "Cleaning old files..."
        Get-ChildItem "$sitePath" -Recurse | Where-Object { $_.Name -ne "app_offline.htm" } | Remove-Item -Recurse -Force -ErrorAction SilentlyContinue

        # Copy new build
        Write-Output "Copying new files..."
        Copy-Item ".\publish\*" "$sitePath\" -Recurse -Force

        # Start the app pool
        Write-Output "Starting IIS App Pool..."
        Start-WebAppPool -Name $appPool

        # Remove app_offline.htm safely
        Write-Output "Removing app_offline.htm..."
        Remove-Item "$sitePath\app_offline.htm" -Force -ErrorAction SilentlyContinue

        Write-Output "Deployment completed successfully!"
      shell: powershell
